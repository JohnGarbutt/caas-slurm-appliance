---

- name: Ensure Terraform bin directory exists
  file:
    path: "{{ terraform_binary_directory }}"
    state: directory

- name: Download Terraform binary
  unarchive:
    remote_src: yes
    src: "{{ terraform_binary_url }}"
    dest: "{{ terraform_binary_directory }}"

- name: Provision infrastructure using Terraform
  terraform:
    binary_path: "{{ terraform_binary_path }}"
    project_path: "{{ terraform_project_path }}"
    state: "{{ terraform_state }}"
    force_init: yes
    variables: "{{ terraform_variables }}"
  register: terraform_provision

- name: Set facts from Terraform outputs
  set_fact:
    cluster_gateway_ip: "{{ terraform_provision.outputs.cluster_gateway_ip.value }}"
    cluster_nodes: "{{ terraform_provision.outputs.cluster_nodes.value }}"

- name: Calculate the SSH args for cluster nodes
  set_fact:
    cluster_ssh_common_args: "-J {{ cluster_gateway_user }}@{{ cluster_gateway_ip }}"

- name: Add cluster nodes to in-memory inventory
  add_host:
    name: "{{ node.name }}"
    groups: "{{ node.groups }}"
    ansible_host: "{{ node.ip }}"
    ansible_user: "{{ cluster_ssh_user }}"
    #Â ansible_ssh_private_key_file: "{{ cluster_ssh_private_key_file }}"
    ansible_ssh_common_args: "{{ cluster_ssh_common_args }}"
  loop: "{{ cluster_nodes }}"
  loop_control:
    loop_var: node
    label: "{{ node.name }}"
